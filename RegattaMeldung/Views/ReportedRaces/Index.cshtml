@model IEnumerable<RegattaMeldung.Models.ReportedRace>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Gemeldete Rennen</h2>

<p>
    <a class="btn btn-success" asp-action="Create">Neues Rennen erstellen</a>
</p>
<div class="row">
    <div class="col-md-4">
        <form asp-action="Index">
            <div class="form-group">
                <select name="rid" id="rid" class="form-control" asp-items="ViewBag.RegattaId"></select>
                <br />
                <div class="form-group">
                    <input type="submit" value="Anzeigen" class="btn btn-primary" />
                </div>
            </div>
        </form>
    </div>
</div>
<br />
<br />
<form asp-action="DeleteMany">
    <div class="form-group">
        <input type="submit" value="Ausgewählte löschen" class="btn btn-danger" />
    </div>
<table class="table table-bordered table-striped">
    <thead>
        <tr>
            <th></th>
            <th>
                Renncode
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Oldclass)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Competition)
            </th>
            <th>
                Gemeldete Rennen
            </th>
            <th></th>
            <th></th>
        </tr>
        <tr>
            <td><input type="checkbox" id="checkAll" name="checkAll" onchange="toggle()" /></td>
            <td><input class="form-control" id="rcInput" onkeyup="searchList()" type="text" placeholder="Filter Renncode..."></td>
            <td><input class="form-control" id="ocInput" onkeyup="searchList()" type="text" placeholder="Filter Altersklasse..."></td>
            <td><input class="form-control" id="compInput" onkeyup="searchList()" type="text" placeholder="Filter Wettkampf..."></td>
            <td></td>
            <td></td>
            <td></td>
        </tr>
    </thead>
    <tbody id="myTable">
        @foreach (var item in Model)
        {
            <tr id="@item.ReportedRaceId">
                <td><input type="checkbox" id="ReportedRaceIds" name="ReportedRaceIds" value="@item.ReportedRaceId"/></td>
                <td>
                    @item.RaceCode
                    @if (item.Comment != "")
                    {
                        @:&nbsp;
                        @:<span class="badge badge-warning">@item.Comment</span>
                        @if (@item.Comment == "Bier Cup")
                        {
                            @:&nbsp;<img src="/images/beer-512.png" height="15" />
                        }
                        @if (@item.Comment == "Prosecco Cup")
                        {
                            @:&nbsp;<img src="/images/prosecco.png" height="15" />
                        }
                    }
                </td>
                <td>
                    @if (item.Gender.Equals("M"))
                    {
                        @if (item.Oldclass.FromAge >= 17 && item.Oldclass.ToAge <= 99)
                        {
                            @:Herren
                        }
                        else if (item.Oldclass.FromAge >= 15 && item.Oldclass.ToAge <= 16)
                        {
                            @:männliche
                        }
                        @Html.DisplayFor(modelItem => item.Oldclass.Name)
                    }
                    else if (string.Equals(item.Gender, "W"))
                    {
                        @if (item.Oldclass.FromAge >= 17 && item.Oldclass.ToAge <= 99)
                        {
                            @:Damen @Html.DisplayFor(modelItem => item.Oldclass.Name)
                        }
                        else if (item.Oldclass.FromAge >= 15 && item.Oldclass.ToAge <= 16)
                        {
                            @:weibliche @Html.DisplayFor(modelItem => item.Oldclass.Name)
                        }
                        else
                        {
                            switch (item.Oldclass.Name)
                            {
                            case "Schüler D":
                                @:Schülerinnen D
                                break;
                            case "Schüler C7":
                                @:Schülerinnen C7
                                break;
                            case "Schüler C8":
                                @:Schülerinnen C8
                                break;
                            case "Schüler C9":
                                @:Schülerinnen C9
                                break;
                            case "Schüler C":
                                @:Schülerinnen C
                                break;
                            case "Schüler B10":
                                @:Schülerinnen B10
                                break;
                            case "Schüler B11":
                                @:Schülerinnen B11
                                break;
                            case "Schüler B12":
                                @:Schülerinnen B12
                                break;
                            case "Schüler B":
                                @:Schülerinnen B
                                break;
                            case "Schüler C/B10":
                                @:Schülerinnen C/B10
                                break;
                            case "Schüler B11/B12":
                                @:Schülerinnen B11/B12
                                break;
                            case "Schüler A13":
                                @:Schülerinnen A13
                                break;
                            case "Schüler A14":
                                @:Schülerinnen A14
                                break;
                            case "Schüler A":
                                @:Schülerinnen A
                                break;
                            default:
                                @Html.DisplayFor(modelItem => item.Oldclass.Name)
                                break;
                        }
                        }
                    }
                    else if (string.Equals(item.Gender, "X"))
                    {
                        @:mixed
                        @Html.DisplayFor(modelItem => item.Oldclass.Name)
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Competition.Name)
                </td>
                <td>
                    @{var x = 0;}
                    @foreach (var repsb in ViewBag.ReportedStartboats)
                    {
                        if (repsb.ReportedRaceId == item.ReportedRaceId)
                        {
                            x++;
                        }
                    }
                    @if (x > 0)
                    {
                        @x
                    }
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.ReportedRaceId" class="btn btn-secondary">Bearbeiten</a>
                </td>
                <td>
                    <a asp-action="Delete" asp-route-id="@item.ReportedRaceId" class="btn btn-danger">L&ouml;schen</a>
                </td>
            </tr>
        }
    </tbody>
</table>
</form>
<script>
    function searchList() {
        // Declare variables
        var inputRC, inputOC, inputComp, filterRC, filterOC, filterComp, table, tr, tdRC, tdOC, tdComp, i;
        inputRC = document.getElementById("rcInput");
        inputOC = document.getElementById("ocInput");
        inputComp = document.getElementById("compInput");
        filterRC = inputRC.value.toUpperCase();
        filterOC = inputOC.value.toUpperCase();
        filterComp = inputComp.value.toUpperCase();
        table = document.getElementById("myTable");
        tr = table.getElementsByTagName("tr");

        // Loop through all table rows, and hide those who don't match the search query
        for (i = 0; i < tr.length; i++) {

            tdRC = tr[i].getElementsByTagName("td")[1];
            tdOC = tr[i].getElementsByTagName("td")[2];
            tdComp = tr[i].getElementsByTagName("td")[3];

            if (tdRC || tdOC || tdComp) {
                if ((tdRC.innerHTML.toUpperCase().indexOf(filterRC) > -1) && (tdOC.innerHTML.toUpperCase().indexOf(filterOC) > -1) && (tdComp.innerHTML.toUpperCase().indexOf(filterComp) > -1)) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }            
        }
    }

    function toggle() {
        var table, tr, ckAll;

        table = document.getElementById("myTable");
        tr = table.getElementsByTagName("tr");
        ckAll = document.getElementById("checkAll");

        for (i = 0; i < tr.length; i++) {
            var oInputs = tr[i].getElementsByTagName("input");

            if(tr[i].style.display != "none")
            {
                for( var j=0; j < oInputs.length; j++ ) {
			        if( oInputs[j].name == "ReportedRaceIds" ) {
                        if(ckAll.checked == true)
                        {
                            oInputs[j].checked = true;
                        }
                        else if(ckAll.checked == false)
                        {
                            oInputs[j].checked = false;
                        }
                    }
                }
            }
        }
    }
</script>